/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame } from "react-three-fiber";

export default function Model({ ...props }) {
  const group = useRef();
  const { nodes, materials } = useGLTF("/fixBoard.gltf");
  useFrame(({ clock }) => {
    group.current.rotation.y = clock.getElapsedTime() / 2;
  });

  return (
    <group ref={group} {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.logo.geometry}
        material={materials.logo}
        rotation={[-Math.PI / 2, -Math.PI, 0]}
        position={[0, -1, -0.13]}
        scale={0.4}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.board.geometry}
        material={materials["Material.001"]}
        scale={0.04}
        rotation={[-Math.PI / 2, -Math.PI / 2, 0]}
      />
    </group>
  );
}

useGLTF.preload("/fixBoard.gltf");
